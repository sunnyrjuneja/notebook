" wasd's .vimrc
set nocompatible                " choose no compatibility with legacy vi

" let Vundle manage Vundle
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'bling/vim-airline'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-bundler'
Plugin 'scrooloose/nerdtree'
Plugin 'Valloric/YouCompleteMe'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'jeffkreeftmeijer/vim-numbertoggle'
Plugin 'slim-template/vim-slim'
Plugin 'kchmck/vim-coffee-script'
Plugin 'fatih/vim-go'
Plugin 'rust-lang/rust.vim'
call vundle#end()
filetype plugin indent on

" Colors
syntax enable
set background=dark
set t_Co=16
let g:solarized_termcolors=16
colorscheme solarized

set tags+=.git/tags

set encoding=utf-8
set showcmd                     " display incomplete commands
set number                      " add line numbers
set autoread
set hid

set history=100

" Whitespace
set tabstop=2 shiftwidth=2      " a tab is two spaces (or set this to 4)
set expandtab                   " use spaces, not tabs (optional)
set backspace=indent,eol,start  " backspace through everything in insert mode
au BufNewFile,BufRead *.go setlocal noet ts=4 sw=4 sts=4

" Indentation
set smartindent                 " copies indentation from previous lines
set autoindent                  " adds an extra level of indentation
set linebreak wrap tw=0         " line breaks and word wrapping visually

" Searching
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " ... unless they contain at least one capital letter

" easier navigation between split windows
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-h> <c-w>h
nnoremap <c-l> <c-w>l

" Add new line without entering insert mode
nmap <S-Enter> O<Esc>j
nmap <CR> o<Esc>k

" save files when you forget to prepend sudo
cmap w!! %!sudo tee > /dev/null %

" forces lines below/above cursor
set scrolloff=2

" status bar
set ruler
set laststatus=2

" indent/spacing
let ruby_space_errors = 1
let c_space_errors = 1
set colorcolumn=81

set suffixesadd=.rb
set path+=lib/**,test/**,spec/**

let g:ycm_key_list_select_completion=['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion=['<C-p>', '<Up>']
let g:ycm_collect_identifiers_from_tags_files = 1

let g:UltiSnipsExpandTrigger="<Tab>"
let g:UltiSnipsJumpForwardTrigger="<Tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-Tab>"
let g:UltiSnipsListSnippets="<c-e>"

let g:EclimCompletionMethod = 'omnifunc'

set guifont=Ubuntu\ Mono\ for\ VimPowerline\ 12

au BufNewFile,BufRead Guardfile set filetype=ruby

let mapleader = ","
map <Leader>rt :!ctags --tag-relative --extra=+f -Rf.git/tags --exclude=.git,pkg --languages=-sql<CR><CR>
nmap <leader>ne :NERDTree<cr>
set noswapfile
